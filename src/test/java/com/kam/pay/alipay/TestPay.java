package com.kam.pay.alipay;import com.alibaba.fastjson.JSON;import com.alipay.easysdk.factory.Factory;import com.alipay.easysdk.kernel.Config;import com.alipay.easysdk.payment.common.models.AlipayTradeCloseResponse;import com.alipay.easysdk.payment.common.models.AlipayTradeQueryResponse;import com.kam.pay.alipay.config.AlipayConfig;import com.kam.pay.alipay.open.PayApi;import org.junit.Before;import org.junit.Test;/** * @author <a href="mailto:xinput.xx@gmail.com">xinput</a> * @date 2020-10-28 11:37 */public class TestPay {    @Before    public void setUp() {        Factory.setOptions(getOptions());    }    private static Config getOptions() {        Config config = new Config();        config.protocol = AlipayConfig.getProtocol();        config.gatewayHost = AlipayConfig.getGatewayHost();        config.signType = AlipayConfig.getSignType();        config.appId = AlipayConfig.getAppId();        // 应用私钥        config.merchantPrivateKey = AlipayConfig.getMerchantPrivateKey();        //注：证书文件路径支持设置为文件系统中的路径或CLASS_PATH中的路径，优先从文件系统中加载，加载失败后会继续尝试从CLASS_PATH中加载        // 应用公钥证书文件路径        config.merchantCertPath = AlipayConfig.getMerchantCertPath();        // 支付宝公钥证书文件路径        config.alipayCertPath = AlipayConfig.getAlipayCertPath();        // 支付宝根证书文件路径        config.alipayRootCertPath = AlipayConfig.getAlipayRootCertPath();        //可设置异步通知接收服务地址（可选）        config.notifyUrl = AlipayConfig.getNotifyUrl();        return config;    }    @Test    public void a01() throws Exception {        String outNo = "c46007d893604f6680e077ae015205f0";        AlipayTradeQueryResponse response = PayApi.query(outNo);        System.out.println(JSON.toJSONString(response, true));    }    @Test    public void close() throws Exception {        String outNo = "c46007d893604f6680e077ae015205f0";        AlipayTradeCloseResponse alipayTradeCloseResponse = PayApi.close(outNo);        System.out.println(JSON.toJSONString(alipayTradeCloseResponse, true));    }}