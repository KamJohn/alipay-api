package com.kam.pay.alipay;import com.alibaba.fastjson.JSON;import com.alipay.easysdk.factory.Factory;import com.alipay.easysdk.kernel.Config;import com.alipay.easysdk.payment.common.models.AlipayTradeCreateResponse;import com.kam.pay.alipay.config.AlipayConfig;import org.junit.Before;import org.junit.Test;import java.util.UUID;/** * @author <a href="mailto:xinput.xx@gmail.com">xinput</a> * @date 2020-10-15 11:54 */public class TestAlipay {    @Before    public void setUp() {        Factory.setOptions(getOptions());    }    private static Config getOptions() {        Config config = new Config();        config.protocol = "https";        config.gatewayHost = "openapi.alipay.com";        config.signType = "RSA2";        // 应用私钥        config.merchantPrivateKey = AlipayConfig.getMerchantPrivateKey();        //注：证书文件路径支持设置为文件系统中的路径或CLASS_PATH中的路径，优先从文件系统中加载，加载失败后会继续尝试从CLASS_PATH中加载        // 应用公钥证书文件路径        config.merchantCertPath = AlipayConfig.getMerchantCertPath();        // 支付宝公钥证书文件路径        config.alipayCertPath = AlipayConfig.getAlipayCertPath();        // 支付宝根证书文件路径        config.alipayRootCertPath = AlipayConfig.getAlipayRootCertPath();        //可设置异步通知接收服务地址（可选）        config.notifyUrl = AlipayConfig.getNotifyUrl();        return config;    }    @Test    public void testCreate() throws Exception {        String outTradeNo = UUID.randomUUID().toString();        AlipayTradeCreateResponse response = Factory.Payment.Common().create(                "iPhone6 16G", outTradeNo, "0.01", "2088002656718920");        System.out.println(JSON.toJSONString(response, true));//        assertThat(ResponseChecker.success(response), is(true));//        assertThat(response.code, is("10000"));//        assertThat(response.msg, is("Success"));//        assertThat(response.subCode, is(nullValue()));//        assertThat(response.subMsg, is(nullValue()));//        assertThat(response.httpBody, not(nullValue()));//        assertThat(response.outTradeNo, is(outTradeNo));//        assertThat(response.tradeNo, startsWith("202"));    }}