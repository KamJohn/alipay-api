package com.kam.pay.alipay.config;import com.aliyun.tea.utils.StringUtils;import com.kam.pay.alipay.consts.AliPayConfigEnum;import com.kam.pay.alipay.util.PropertiesUtils;public class AlipayConfig {    private static final PropertiesUtils propertiesUtils = PropertiesUtils.propertiesUtil;    /**     * 通信协议，默认 https     */    private static String protocol;    /**     * 网关域名     * 线上为：openapi.alipay.com     * 沙箱为：openapi.alipaydev.com     */    private static String gatewayHost;    private static String appId;    /**     * 签名类型，Alipay Easy SDK只推荐使用RSA2，估此处固定填写RSA2     */    private static String signType = "RSA2";    /**     * 应用私钥     */    private static String merchantPrivateKey;    /**     * 应用公钥证书文件路径     */    private static String merchantCertPath;    /**     * 支付宝公钥证书文件路径     */    private static String alipayCertPath;    /**     * 支付宝根证书文件路径     */    private static String alipayRootCertPath;    /**     * 异步通知回调地址（可选）     */    private static String notifyUrl;    public static String getProtocol() {        if (StringUtils.isEmpty(protocol)) {            protocol = propertiesUtils.getStringProperty(AliPayConfigEnum.PROTOCOL.getKey(), "https");        }        return protocol;    }    public static String getGatewayHost() {        if (StringUtils.isEmpty(gatewayHost)) {            gatewayHost = propertiesUtils.getStringProperty(AliPayConfigEnum.GATEWAY_HOST.getKey(), "openapi.alipay.com");        }        return gatewayHost;    }    public static String getAppId() {        if (StringUtils.isEmpty(appId)) {            appId = propertiesUtils.getStringProperty(AliPayConfigEnum.APPID.getKey());        }        return appId;    }    public static String getSignType() {        return signType;    }    public static String getMerchantPrivateKey() {        if (StringUtils.isEmpty(merchantPrivateKey)) {            merchantPrivateKey = propertiesUtils.getStringProperty(AliPayConfigEnum.MERCHANT_PRIVATE_KEY.getKey());        }        return merchantPrivateKey;    }    public static String getMerchantCertPath() {        if (StringUtils.isEmpty(merchantCertPath)) {            merchantCertPath = propertiesUtils.getStringProperty(AliPayConfigEnum.MERCHANT_CERT_PATH.getKey());        }        return merchantCertPath;    }    public static String getAlipayCertPath() {        if (StringUtils.isEmpty(alipayCertPath)) {            alipayCertPath = propertiesUtils.getStringProperty(AliPayConfigEnum.ALIPAY_CERT_PATH.getKey());        }        return alipayCertPath;    }    public static String getAlipayRootCertPath() {        if (StringUtils.isEmpty(alipayRootCertPath)) {            alipayRootCertPath = propertiesUtils.getStringProperty(AliPayConfigEnum.ALIPAY_ROOT_CERT_PATH.getKey());        }        return alipayRootCertPath;    }    public static String getNotifyUrl() {        if (StringUtils.isEmpty(notifyUrl)) {            notifyUrl = propertiesUtils.getStringProperty(AliPayConfigEnum.NOTIFY_URL.getKey());        }        return notifyUrl;    }}